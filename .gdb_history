b main
run
step
step
step
p cur_char
step
p cur_byte
step
p cur_byte
step
q
b main
run
step
p cur_char
step
step
p cur_byte
list 45
list 40
p cur_char - '0'
p 4 << 4
p (cur_char - '0') << (i % 2 == 0)? 4 : 0;
p (cur_char - '0') << (i % 2 == 0)? 4 : 0
p (cur_char - '0') <<  4
p cur_byte
0 | 64
p 0 | 64
pcur_byte
p cur_byte
q
b main
run
step
p cur_byte
p i
p i % 2 == 0
step
p cur_char
p cur_char - '0'
p 9 << 4
p i % 2 == 0
step
p cur_byte
step
p cur_byte
q
b main
run
step
q
b main
run
step
p cur_byte
step
p cur_byte
step
b 70
step
c
p byte
step
step
p c[0]
step
p c
step
p c
step
step
p bytes[i]
step
p byte
step
step
p c
step
p c
step
q
b main
step
run
step
b calc_mrse
c
up
list
p freqs
q
b main
run
step
p calc_freqs
c
62;c62;cq
q
b calc_freqs
run
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
si
si
step
p bytes
p bytes[i]
p 'a'
step
step
p freqs
p freqs[0]
p freqs*
p *freqs
p freqs[1]
p freqs[2]
step
q
b main
step
run
step
p key
watch key
cond 2 key=='X'
c
p key
step
step
step
b 44
c
p freqs
p freqs[0]
p strlen
p bytes
p freqs
step
p bytes[i] - 'A'
step
p freqs[2]
p freqs[1]
p 1/34.0
step
step
step
p count_letters
step
p i
step
p i
step
p i
step
p i
step
p freqs
p freqs[0]
p *freqs@10
p *freqs@34
q
b main
step
run
step
b 54
step
b 66
c
del 3
step
c
c
c
step
up
list
list
p len
watch key
q
